private void dataGridView1_RowStateChanged(object sender, DataGridViewRowStateChangedEventArgs e)
{
    // Verifica se o estado da linha é selecionado
    if (e.StateChanged == DataGridViewElementStates.Selected)
    {
        // Obtém a linha selecionada
        DataGridViewRow selectedRow = e.Row;

        // Itera sobre as células da linha selecionada
        foreach (DataGridViewCell cell in selectedRow.Cells)
        {
            // Define a cor de fundo da célula
            cell.Style.BackColor = Color.Yellow; // Ou qualquer outra cor que você deseja usar
        }
    }
}

public Form1()
{
    InitializeComponent();
    dataGridView1.RowStateChanged += dataGridView1_RowStateChanged;
}

public Pjuridica()
{
    InitializeComponent();
    situacao = rbAtivoJ.Text; // Defina a situação padrão aqui
    destacS(); // Chame o método destacS() para destacar as células corretamente
}

private void save_Click(object sender, EventArgs e)
{
    // Outro código aqui...

    // Atualiza a variável situacao com base no RadioButton selecionado
    situacao = rbAtivoJ.Checked ? rbAtivoJ.Text : rbInativoJ.Text;

    // Outro código aqui...

    destacS(); // Atualiza a cor de fundo das células do DataGridView
}

private void pjuridicaDataGridView_MouseDoubleClick(object sender, MouseEventArgs e)
{
    // Outro código aqui...

    // Atualiza a variável situacao com base nos dados da célula selecionada
    situacao = pjuridicaDataGridView.SelectedRows[0].Cells[15].Value.ToString();

    destacS(); // Atualiza a cor de fundo das células do DataGridView
}

private void destacS()
{
    foreach (DataGridViewRow linha in pjuridicaDataGridView.Rows)
    {
        if (linha.Cells[15].Value.ToString() == rbAtivoJ.Text)
        {
            linha.Cells[0].Style.BackColor = Color.Blue;
        }
        else if (linha.Cells[15].Value.ToString() == rbInativoJ.Text)
        {
            linha.Cells[0].Style.BackColor = Color.Red;
        }
        else
        { 
            // Se necessário, lógica para outras situações
        }
    }
}

cusing System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Data.SqlClient;

namespace WindowsFormsApplication1
{
    public partial class Pjuridica : Form
    {
        public int emailJ;
        public int cnpJ;
        public string mensagem;
        public string ValidateCnpj;
        public string connetionString;
        public bool novo;
        public int code;
        public string situacao;


        public Pjuridica()
        {
            InitializeComponent();
            destacS();
        }

        private void destacS()
        {
            foreach (DataGridViewRow linha in pjuridicaDataGridView.Rows)
            {
                if (situacao == rbAtivoJ.Text)
                {
                    linha.Cells[0].Style.BackColor = Color.Blue;
                }
                else if (situacao == rbInativoJ.Text)
                {
                    linha.Cells[0].Style.BackColor = Color.Red;
                }
                else
                { }
            }
        }
 
        SqlConnection conn = new SqlConnection(@"Data Source=CANCUN\SQLEXPRESS;Initial Catalog=exProgramacao;Persist Security Info=True;User ID=sa;Password=zx862");       
        private void LoadData()
        {
            try
            {
                conn.Open();
                string query = "SELECT * FROM Pjuridica";
                SqlDataAdapter SDA = new SqlDataAdapter(query, conn);
                DataTable dt = new DataTable();
                SDA.Fill(dt);

                pjuridicaDataGridView.DataSource = dt;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Erro ao carregar dados: " + ex.Message);
            }
            finally
            {
                conn.Close();
            }
        }
        private void save_Click(object sender, EventArgs e)
        {
              situacao = "";
             if (rbAtivoJ.Checked)
            {
                situacao = rbAtivoJ.Text;
            }

            if (rbInativoJ.Checked)
            {
                situacao = rbInativoJ.Text;
            }

            if (string.IsNullOrEmpty(txtName.Text.Trim()))
            {
                errorProvider1.SetError(txtName, "Insira um nome");
                return;
            }
            else
            {
                errorProvider1.SetError(txtName, string.Empty);
            }

            if (string.IsNullOrEmpty(txtAddres.Text.Trim()))
            {
                errorProvider2.SetError(txtAddres, "Insira um endereço");
                return;
            }
            else
            {
                errorProvider2.SetError(txtAddres, string.Empty);
            }

            if (string.IsNullOrEmpty(cbState.Text.Trim()))
            {
                errorProvider3.SetError(cbState, "Insira um estado");
                return;
            }
            else
            {
                errorProvider3.SetError(cbState, string.Empty);
            }

            if (string.IsNullOrEmpty(txtCity.Text.Trim()))
            {
                errorProvider4.SetError(txtCity, "Insira uma cidade");
                return;
            }
            else
            {
                errorProvider4.SetError(txtCity, string.Empty);
            }        
            if (string.IsNullOrEmpty(mskCnpj.Text.Trim()))
            {
                errorProvider5.SetError(mskCnpj, "Insira um cnpj");
                return;
            }
            else
            {
                errorProvider5.SetError(mskCnpj, string.Empty);
            }

            if (string.IsNullOrEmpty(mskDate.Text.Trim()))
            {
                errorProvider6.SetError(mskDate, "Insira uma data");
                return;
            }
            else
            {
                errorProvider6.SetError(mskDate, string.Empty);
            }

            identify();

            string valor = mskCnpj.Text;
            if (ValidateCNPJ.ValidadateCNPJ.IsCnpj(valor))
            {
                cnpJ = 1; errorProvider8.Clear();
            }
            else
            {
                errorProvider8.SetError(mskCnpj, "Insira um cnpj valido");
                return;
            }

            try
            {
                conn.Open();
                string query = "INSERT INTO Pjuridica(name, addres, street, city, streetNumber, cep, state, cnpj, ie, cellNumber, landline, email, date, observation, status) VALUES('" + txtName.Text + "','" + txtAddres.Text + "','" + txtStreet.Text + "','" + txtCity.Text + "','" + txtStreetNumber.Text + "','" + mskCep.Text + "','" + cbState.Text + "','" + mskCnpj.Text + "','" + mskIe.Text + "','" + mskCellNumber.Text + "','" + mskLandline.Text + "','" + txtEmail.Text + "','" + mskDate.Text + "','" + txtObservation.Text + "','"+situacao+"')";
                SqlDataAdapter SDA = new SqlDataAdapter(query, conn);
                SDA.SelectCommand.ExecuteNonQuery();
            }
            catch (Exception)
            {
                MessageBox.Show("Error" + ex);
            }

            finally
            {
                conn.Close();
            }

            MessageBox.Show(mensagem, "Registro incluído com sucesso!");

            Pjuridica NewForm = new Pjuridica();
            NewForm.Show();
            this.Dispose(false);

            panel1.Enabled = false;       
        }

        public void identify()
        {
            string pattern = "^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$";

            if (Regex.IsMatch(txtEmail.Text, pattern) == false)
            {
                if (txtEmail.Text.All(Char.IsWhiteSpace))
                {
                    emailJ = 1;
                    errorProvider7.Clear();
                }
                else
                {
                    emailJ = 0;
                    errorProvider7.SetError(this.txtEmail, "Insira outro email");
                    return;
                }
            }
        }
      

        private void cnpJ_CheckedChanged(object sender, EventArgs e)
        {
            mskCnpj.Text = "";
            mskCnpj.Mask = "";
            mskCnpj.MaskInputRejected += new MaskInputRejectedEventHandler(cnpj_MaskInputRejected);
        }
        private void cnpj_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)
        { }

        private void clean_Click(object sender, EventArgs e)
        {
            Pjuridica NewForm = new Pjuridica();
            NewForm.Show();
            this.Dispose(false);
        }

        private void pjuridicaBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            this.Validate();
            this.pjuridicaBindingSource.EndEdit();
            this.tableAdapterManager.UpdateAll(this.exProgramacaoDataSet1);
        }
        private void Pjuridica_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'exProgramacaoDataSet1.Pjuridica' table. You can move, or remove it, as needed.
            this.pjuridicaTableAdapter2.Fill(this.exProgramacaoDataSet1.Pjuridica);
            // TODO: This line of code loads data into the 'exProgramacaoDataSet21.Pjuridica' table. You can move, or remove it, as needed.
            this.pjuridicaTableAdapter1.Fill(this.exProgramacaoDataSet.Pjuridica);
              btnReturn.Enabled = false;
        }
        private void btnReturn_Click(object sender, EventArgs e)
        {
            var Main = new Main();
            Main.Show();
        }
        public static DataTable DataSource
        {
            get;
            set;
        }
        private void btnCreat_Click(object sender, EventArgs e)
        {
            panel1.Enabled = true;
            panel4.Enabled = true;
        }
        private void txtStreetNumber_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
                MessageBox.Show("este campo aceita somente numero");
            }
        }
        private void btnDelete_Click(object sender, EventArgs e)
        {
            try
            {
                conn.Open();
                string query = "DELETE Pjuridica WHERE Code = "+ txtCode.Text +" ";
                SqlDataAdapter SDA = new SqlDataAdapter(query, conn);
                SDA.SelectCommand.ExecuteNonQuery();

                MessageBox.Show("Cadastro deletado com sucesso");
            }
            catch (Exception ex)
            {
                MessageBox.Show("Erro" + ex);
            }
          finally
            {
                conn.Close();
            }
            LoadData();

            Pjuridica NewForm = new Pjuridica();
            NewForm.Show();
            this.Dispose(false);
        }
        private void btnUpdate_Click(object sender, EventArgs e)
        {
            panel1.Enabled = true;
            if (pjuridicaDataGridView.SelectedRows.Count >0)
            {
                int rowIndex = pjuridicaDataGridView.SelectedRows[0].Index;
                try
                {
                    conn.Open();
                    string query = "UPDATE Pjuridica SET  name = @Name, addres = @Addres, street = @Street, city = @City, streetNumber = @StreetNumber, cep = @Cep, state = @State, cnpj = @Cnpj, ie = @Ie, cellNumber = @CellNumber, landline  = @Landline , email = @Email, date = @Date, observation = @Observation, situacao = @status WHERE code = @Code";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@Code", txtCode.Text);
                        command.Parameters.AddWithValue("@Name", txtName.Text);
                        command.Parameters.AddWithValue("@Addres", txtAddres.Text);
                        command.Parameters.AddWithValue("@Street", txtStreet.Text);
                        command.Parameters.AddWithValue("@City", txtCity.Text);
                        command.Parameters.AddWithValue("@StreetNumber", txtStreetNumber.Text);
                        command.Parameters.AddWithValue("@Cep", mskCep.Text);
                        command.Parameters.AddWithValue("@State", cbState.Text);
                        command.Parameters.AddWithValue("@Cnpj", mskCnpj.Text);
                        command.Parameters.AddWithValue("@Ie", mskIe.Text);
                        command.Parameters.AddWithValue("@CellNumber", mskCellNumber.Text);
                        command.Parameters.AddWithValue("@LandLine", mskLandline.Text);
                        command.Parameters.AddWithValue("@Email", txtEmail.Text);
                        command.Parameters.AddWithValue("@Date", mskDate.Text);
                        command.Parameters.AddWithValue("@Observation", txtObservation.Text);
                        command.Parameters.AddWithValue("@status", situacao);
                        command.ExecuteNonQuery();
                        
                        MessageBox.Show("Registro atualizado com sucesso!");
                        Pjuridica NewForm = new Pjuridica();
                        NewForm.Show();
                        this.Dispose(false);
                    }               
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Erro ao atualizar registro: " + ex.Message);
                }
                finally
                {
                    conn.Close();
                    LoadData(); // Recarregar dados 
                 }
            }
            else
            { }
        }
        private void pjuridicaDataGridView_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            try
            {
                if (pjuridicaDataGridView.SelectedRows.Count >= 0)
                {
                    txtCode.Text = pjuridicaDataGridView.SelectedRows[0].Cells[0].Value.ToString();
                    txtName.Text = pjuridicaDataGridView.SelectedRows[0].Cells[1].Value.ToString();
                    txtAddres.Text = pjuridicaDataGridView.SelectedRows[0].Cells[2].Value.ToString();
                    txtStreet.Text = pjuridicaDataGridView.SelectedRows[0].Cells[3].Value.ToString();
                    txtCity.Text = pjuridicaDataGridView.SelectedRows[0].Cells[4].Value.ToString();
                    txtStreetNumber.Text = pjuridicaDataGridView.SelectedRows[0].Cells[5].Value.ToString();
                    mskCep.Text = pjuridicaDataGridView.SelectedRows[0].Cells[6].Value.ToString();
                    cbState.Text = pjuridicaDataGridView.SelectedRows[0].Cells[7].Value.ToString();
                    mskCnpj.Text = pjuridicaDataGridView.SelectedRows[0].Cells[8].Value.ToString();
                    mskIe.Text = pjuridicaDataGridView.SelectedRows[0].Cells[9].Value.ToString();
                    mskLandline.Text = pjuridicaDataGridView.SelectedRows[0].Cells[10].Value.ToString();
                    mskCellNumber.Text = pjuridicaDataGridView.SelectedRows[0].Cells[11].Value.ToString();
                    txtEmail.Text = pjuridicaDataGridView.SelectedRows[0].Cells[12].Value.ToString();
                    mskDate.Text = pjuridicaDataGridView.SelectedRows[0].Cells[13].Value.ToString();
                    txtObservation.Text = pjuridicaDataGridView.SelectedRows[0].Cells[14].Value.ToString();
                    rbAtivoJ.Text = pjuridicaDataGridView.SelectedRows[0].Cells[15].Value.ToString();
                }
            }
            catch (Exception)
            { }
            
        }
        private void txtStreetNumber_TextChanged(KeyPressEventArgs e)
        { }
        private void btnCreat_MouseClick(object sender, MouseEventArgs e)
        { }
        private void ExibirDados()
        { }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }
    }
}
